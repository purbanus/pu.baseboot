# Deze files is voor clients, zoals de RunNLoggiesAndWait testjes

# De root logger bestaat altijd (denk ik) en je geeft hier op:
# - DEBUG - de root logger moet alles van DEBUG en hoger loggen
# - X     - de root logger heeft 1 appender genaamd X. Volgens mij
#           kun je die X beter Console noemen. Dat doen we hier!
log4j.rootLogger = DEBUG, Console, Remote

# Eventuele extra loggers
####log4j.logger.pu.log4j=DEBUG,Console,Database

# ConsoleAppender
# Voor het conversionpattern zie log4j_patterns.properties
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#####log4j.appender.Console.layout.conversionPattern=%d %-5p: %m Logger=%c LoggerFQCN=%C File=%F Location=%l Line=%L Method=%M Thread=%t NDC=%x MDC=%X{ip}%n
#####log4j.appender.Console.layout.conversionPattern=%d %-5p [%t] %m -- %c{1} %F:%L %C{1}.%M location=%l %n
#
# De volgende ziet er heel aantrekkelijk uit, maar het gebruikt de location (%l) en dat is duur. Helemaal geen locationInfo gebruiken
# is ongeveer 2,5 keer zo snel (0,35 ms vs 0,13 ms per log statement op mijn 3,4GHz bak)
#####log4j.appender.Console.layout.conversionPattern=%d %-5p [%t] %m -- %l %n
log4j.appender.Console.layout.conversionPattern=%d %-5p [%t] %m -- %c %n

# De remote appender
####log4j.appender.Remote=org.apache.log4j.net.SocketAppender
log4j.appender.Remote=pu.log.SocketAppender
log4j.appender.Remote.locationInfo=true
log4j.appender.Remote.port=44443
log4j.appender.Remote.reconnectionDelay=30000
log4j.appender.Remote.remoteHost=localhost
####Werkt niet log4j.appender.Remote.connectionCallback=pu.log4j.SendSessionStateCallback

